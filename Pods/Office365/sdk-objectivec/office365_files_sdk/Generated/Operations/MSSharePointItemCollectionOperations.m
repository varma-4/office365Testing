/*******************************************************************************
Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the MIT or Apache License; see LICENSE in the source repository
root for authoritative license information.ï»¿

**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
******************************************************************************/

#import "MSSharePointItemCollectionOperations.h"
#import "MSSharePointODataEntities.h"

/**
* The implementation file for type MSSharePointItemCollectionOperations.
*/

@implementation MSSharePointItemCollectionOperations

- (NSURLSessionTask *)addWithPath:(NSString *)path nameConflict:(NSString *)nameConflict type:(NSString *)type content:(NSStream *)content callback:(void (^)(MSSharePointItem *item, MSODataException *error))callback {

	
	NSString *pathString = [self.resolver.jsonSerializer serialize:path property:@"path"];
	NSString *nameConflictString = [self.resolver.jsonSerializer serialize:nameConflict property:@"nameConflict"];
	NSString *typeString = [self.resolver.jsonSerializer serialize:type property:@"type"];
	NSString *contentString = [self.resolver.jsonSerializer serialize:content property:@"content"];

	NSURLSessionTask *task = [self addRawWithPath:pathString nameConflict:nameConflictString type:typeString content:contentString callback:^(NSString *returnValue, MSODataException *exception) {
       
	   if (exception == nil) {

			MSSharePointItem * result = (MSSharePointItem *)[super.resolver.jsonSerializer deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] asClass:[MSSharePointItem class]];
            
			callback(result, exception);
        }
        else {

            callback(nil, exception);
        }
    }];
    
    return task;
}

- (NSURLSessionTask *)addRawWithPath:(NSString *) path nameConflict:(NSString *) nameConflict type:(NSString *) type content:(NSString *) content callback:(void (^)(NSString *item, MSODataException *error))callback {

	id<MSODataRequest> request = [super.resolver createODataRequest];
	NSArray *parameters = [[NSArray alloc] initWithObjects:
                          [[NSDictionary alloc] initWithObjectsAndKeys :path,@"path", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :nameConflict,@"nameConflict", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :type,@"type", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :content,@"content", nil], nil];

	NSData* payload = [[MSODataBaseContainerHelper generatePayloadWithParameters:parameters dependencyResolver:self.resolver] dataUsingEncoding:NSUTF8StringEncoding];

	[request setContent:payload];



	[request.url appendPathComponent:@"add"];
	[request setContent:payload];

	NSURLSessionTask *task = [super oDataExecuteRequest:request 
										       callback:^(id<MSODataResponse> response, MSODataException *exception) {
		
		if (exception == nil) {

            callback([[NSString alloc] initWithData:response.data encoding:NSUTF8StringEncoding], exception);
        }
        else {

            callback([[NSString alloc] initWithFormat:@"%d", response.status], exception);
        }
    }];
    
    return task;
}
		

- (NSURLSessionTask *)getByPathWithPath:(NSString *)path callback:(void (^)(MSSharePointItem *item, MSODataException *exception))callback {

	id<MSODataRequest> request = [super.resolver createODataRequest];
	NSDictionary *params = [[NSDictionary alloc] initWithObjectsAndKeys:path,@"path",nil];


	NSString *parameters = [MSODataBaseContainerHelper getFunctionParameters:params];
	
	[request.url appendPathComponent:[[NSString alloc] initWithFormat:@"getByPath(%@)",parameters]];
		
	NSURLSessionTask *task = [super oDataExecuteRequest:request callback:^(id<MSODataResponse> response, MSODataException *exception){

       if (exception == nil) {

			MSSharePointItem * result = (MSSharePointItem *)[super.resolver.jsonSerializer deserialize:response.data asClass:[MSSharePointItem class]];
            callback(result, exception);
        }
        else {

            callback(nil, exception);
        }
    }];
    
    return task;
}		
@end